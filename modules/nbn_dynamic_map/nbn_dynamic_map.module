<?php
/**
 * @file
 * Defines a formatter for the taxon formatters module that can display NBN WMS
 * maps overlaid onto OpenLayers maps.
 */

/**
 * Implements hook_taxon_formatter_types().
 */
function nbn_dynamic_map_taxon_formatter_types() {
  $formatter = array(
    'nbn_dynamic_map' => array(
      'title' => t('NBN Dynamic Map'),
      // Field type is tvk, tlick or brc (+GBIF?).
      'field_type' => 'tvk',
      // Function that generates the form using Forms API, with arguments for
      // the current settings values, type name (e.g. nbn_dynamic_map) and
      // optional $args.
      'form_callback' => 'nbn_dynamic_map_taxon_formatter_settings_form',
      // Can be used to pass arguments to the form.
      'form_args' => array(),
    ),
  );
  return $formatter;
}

/**
 * This defines the drupal form used for the settings of this formatter type.
 */
function nbn_dynamic_map_taxon_formatter_settings_form($settings, $type, $args) {
  if ($type == 'nbn_dynamic_map') {
    // Apply some defaults.
    $settings = array_merge(array(
      'width' => 200,
      'height' => 300,
    ), $settings);
    $form = array();
    // @todo validate width and height.
    $form['width'] = array(
      '#type' => 'textfield',
      '#title' => t('Width (px)'),
      '#description' => t('Width of the map in pixels.'),
      '#required' => TRUE,
      '#default_value' => $settings['width'],
    );
    $form['height'] = array(
      '#type' => 'textfield',
      '#title' => t('Height (px)'),
      '#description' => t('Height of the map in pixels.'),
      '#required' => TRUE,
      '#default_value' => $settings['height'],
    );
    $form['datasets'] = array(
      '#type' => 'textarea',
      '#title' => t('Datasets'),
      '#description' => t('List the keys of the datasets to restrict the query to one per line, or leave blank for no dataset filter.'),
      '#required' => FALSE,
      '#default_value' => $settings['datasets'],
      '#wysiwyg' => FALSE,
    );
  }
  return $form;
}

/**
 * Implements the output theme function.
 */
function theme_nbn_dynamic_map_taxon_formatter_output($params) {
  $item = $params['item'];
  $preset = $params['preset'];
  // Return nothing if no TVK.
  $tvk = trim($item['value']);
  if (empty($tvk)) {
    return '';
  }
  iform_load_helpers(array('map_helper'));
  $map = map_helper::map_panel(array(
    'presetLayers' => array('google_satellite', 'google_physical', 'osm'),
    'editLayer' => FALSE,
    'initial_lat' => variable_get('indicia_map_centroid_lat', 55),
    'initial_long' => variable_get('indicia_map_centroid_long', -1),
    'initial_zoom' => variable_get('indicia_map_zoom', 5),
    'width' => $preset['settings']['width'],
    'height' => $preset['settings']['height'],
    'standardControls' => array('layerSwitcher', 'panZoomBar'),
    'rememberPos' => FALSE,
  ), array('theme' => map_helper::$js_path . 'theme/default/style.css'));
  if (!empty($preset['settings']['datasets'])) {
    $ds = str_replace("\r\n", "\n", $preset['settings']['datasets']);
    $ds = str_replace("\r", "\n", $ds);
    $ds = explode("\n", trim($ds));
    $datasets = '?datasets=' . implode(',', $ds);
  }
  else {
    $datasets = '';
  }
  // Datasets get embedded straight in the URL rather than passed as a property,
  // as OpenLayers capitalises it which the gateway then ignores.
  map_helper::$javascript .= '
mapSettingsHooks.push(function(opts) {
   var nbn10 = new OpenLayers.Layer.WMS("NBN Gateway 10km data", "https://gis.nbn.org.uk/SingleSpecies/' . $tvk . $datasets . '", 
      {LAYERS: "Grid-10km", CRS:"EPSG:3857", VERSION:"1.3.0", FORMAT:"png", TRANSPARENT: true}, {isBaseLayer: false, opacity: 0.5, minResolution: 360}),
      nbn1 = new OpenLayers.Layer.WMS("NBN Gateway 1km data", "https://gis.nbn.org.uk/SingleSpecies/' . $tvk . $datasets . '", 
      {LAYERS: "Grid-1km", CRS:"EPSG:3857", VERSION:"1.3.0", FORMAT:"png", TRANSPARENT: true}, {isBaseLayer: false, opacity: 0.5, maxResolution: 361});
  opts.layers.splice(0, 0, nbn10, nbn1);
});
';
  $args = array(
    'map' => $map,
    'preset' => $preset);
  $r = theme('nbn_dynamic_map_output', $args);
  handle_resources();
  return $r;
}

/**
 * Theme function to wrap the dynamic map output in NBN terms and conditions.
 */
function theme_nbn_dynamic_map_output($args) {
  $result = '<div style="width: ' . $args['preset']['settings']['width'] . 'px; margin: 0 auto;">';
  $result .= $args['map'];
  $result .= '<table width="100%">' .
      '<tbody><tr><td align="left"><a href="http://data.nbn.org.uk/help/popups/generalTerms.jsp">' .
      t('Gateway terms and conditions') . '</a></td><td align="right"><a href="http://data.nbn.org.uk">' .
      '<img src="http://data.nbn.org.uk/images/NBNPower.gif" alt="NBN Logo" width="100" height="14"></a></td></tr></tbody></table></div>';
  return $result;
}

/**
 * Implements of hook_theme().
 */
function nbn_dynamic_map_theme() {
  $theme = array();
  $theme["nbn_dynamic_map_taxon_formatter_output"] = array(
    'arguments' => array('element' => NULL),
  );
  $theme["nbn_dynamic_map_output"] = array(
    'arguments' => array('element' => NULL),
  );
  return $theme;
}
